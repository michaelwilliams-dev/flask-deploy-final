technical issues withoutunderstanding the bigger picture. Thinking on such a high level frees the mindup to investigate from all different angles: Why are the bones of the hand thisway? What makes the palm so malleable? How does the sense of touch influenceour thinking in general? It allows her to go deeply into the details without losinga sense of the why.You must make this a model for your own work as well. Your project or theproblem you are solving should always be connected to something larger—abigger question, an overarching idea, an inspiring goal. Whenever your workbegins to feel stale, you must return to the larger purpose and goal that impelledyou in the first place. This bigger idea governs your smaller paths ofinvestigation, and opens up many more such paths for you to look into. Byconstantly reminding yourself of your purpose, you will prevent yourself fromfetishizing certain techniques or from becoming overly obsessed with trivialdetails. In this way you will play into the natural strengths of the human brain,which wants to look for connections on higher and higher levels.7. The Evolutionary HijackIn the summer of 1995, Paul Graham (see chapter 2, page 87–89) heard a storyon the radio promoting the endless possibilities of online commerce, which atthe time hardly existed. The promotion came from Netscape, which was trying to drum up interest in its business on the eve of its IPO. The story sounded sopromising, yet so vague. At the time, Graham was at a bit of a crossroads. Aftergraduating from Harvard with a PhD in computer engineering, he had fallen intoa pattern: he would find some part-time consulting job in the software business;then, with enough money saved, he would quit the job and devote his time to hisreal love—art and painting—until the money ran out, and then he wouldscramble for another job. Now thirty-one-years old, he was getting tired of thepattern, and he hated consulting. The prospect of making a lot of money quicklyby developing something for the Internet suddenly seemed very appealing.He called up his old programming partner from Harvard, Robert Morris, andinterested him in the idea of collaborating on their own startup, even thoughGraham had no clue where they would start or what they would develop. After afew days of discussing this, they decided they would try to write software thatwould enable a business to generate an online store. Once they were clear aboutthe concept, they had to confront a very large obstacle in their way. In thosedays, for a program to be popular enough it would have to be written forWindows. As consummate hackers, they loathed everything about Windows andhad never bothered to learn how to develop applications for it. They preferred towrite in Lisp and have the program run on Unix, the open-source operatingsystem.They decided to postpone the inevitable and wrote the program for Unixanyway. To translate this later into Windows would be easy, but as theycontemplated doing this, they realized the terrible consequences it would lead to—once the program was launched in Windows, they would have