technicians live in their own world, focusing mostly on the “how” of things. Others live inthe world of appearances, using these things but not really understanding howthey function. Just before this split occurred, it was the ideal of the Renaissanceto combine these two forms of knowledge. This is why the work of Leonardo daVinci continues to fascinate us, and why the Renaissance remains an ideal. Thismore rounded knowledge is in fact the way of the future, especially now that somuch more information is available to all of us. As Calatrava intuited, thisshould be a part of our apprenticeship. We must make ourselves study as deeplyas possible the technology we use, the functioning of the group we work in, theeconomics of our field, its lifeblood. We must constantly ask the questions—how do things work, how do decisions get made, how does the group interact?Rounding our knowledge in this way will give us a deeper feel for reality and theheightened power to alter it.8. Advance through trial and errorGrowing up in a suburb of Pittsburgh, Pennsylvania, in the early 1970s, PaulGraham (b. 1964) became fascinated with the depiction of computers intelevision and film. They were like electronic brains with limitless powers. In thenear future, or so it seemed, you would be able to talk to your computer, and itwould do everything you wanted.In junior high school he had been admitted into a program for gifted studentsthat provided them with the chance to work on a creative project of theirchoosing. Graham decided to focus his project on the school’s computer, an IBMmainframe that was used for printing out grade reports and class schedules. Thiswas the first time he had gotten his hands on a computer, and although it wasprimitive and had to be programmed with punch cards, it seemed like somethingmagical—a portal to the future.Over the next few years, he taught himself how to program by consulting thefew books then written on the subject, but mostly he learned by trial and error.Like painting on a canvas, he could see the results immediately of what he haddone—and if the programming worked, it had a certain aesthetic rightness to it.The process of learning through trial and error was immensely satisfying. Hecould discover things on his own, without having to follow a rigid path set up byothers. (This is the essence of being a “hacker.”) And the better he got atprogramming, the more he could make it do.Deciding to pursue his studies further, he chose to attend Cornell University,which at the time had one of the best computer science departments in thecountry. Here he finally received instruction in the basic principles ofprogramming, cleaning up many of the bad hacking habits he had developed on programming, cleaning up many of the bad hacking habits he had developed onhis own. He became intrigued by the recently developed field of artificialintelligence—the key to designing the kinds of computers he had dreamed aboutas a child. To be on the frontier of this new field, he applied and was accepted tothe